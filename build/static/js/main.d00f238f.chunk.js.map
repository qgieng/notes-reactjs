{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","console","log","noteService","initialNotes","length","notesToShow","filter","map","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d00f238f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n\r\n  return (\r\n    <li className='note'>\r\n      {note.content} \r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    const nonExisting = {\r\n      id: 10000,\r\n      content: 'This note is not saved to server',\r\n      date: '2019-05-30T17:30:31.098Z',\r\n      important: true,\r\n    }\r\n    return request.then(response => response.data.concat(nonExisting))\r\n    //return request.then(response => response.data)\r\n  }\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default{ \r\n    getAll, \r\n    create, \r\n    update \r\n  }","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification;","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    const footerStyle = {\r\n      color: 'green',\r\n      fontStyle: 'italic',\r\n      fontSize: 16\r\n    }\r\n  \r\n    return (\r\n      <div style={footerStyle}>\r\n        <br />\r\n        <em>Note app</em>\r\n      </div> \r\n    )\r\n  }\r\n  export default Footer;","import React, { useState, useEffect } from 'react'\r\nimport Note from './components/Note'\r\nimport noteService from './services/notes'\r\nimport Notification from './components/Notification'\r\nimport Footer from './components/Footer.js'\r\n\r\n\r\n\r\n\r\nconst App = (props) => {\r\n    const [notes, setNotes] = useState([]);\r\n    const [newNote, setNewNote] = useState('a new note...');\r\n    const [showAll, setShowAll] = useState(true);\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n    const hook = () => {\r\n      console.log('effect')\r\n      noteService.getAll()\r\n        .then(initialNotes => {\r\n          setNotes(initialNotes)\r\n        })\r\n    }\r\n    \r\n\r\n    useEffect(hook,[]); \r\n    console.log('render', notes.length, 'notes')\r\n\r\n    const addNote = (event) => { \r\n            /*\r\n            method, which prevents the default action of submitting a form. \r\n            The default action would, among other things, cause the page to reload.\r\n            */   \r\n            event.preventDefault() ;   \r\n            const noteObject = {\r\n                content: newNote,\r\n                date: new Date().toISOString(),\r\n                important: Math.random() < 0.5,\r\n                id: notes.length + 1,\r\n            }\r\n            noteService\r\n                  .create(noteObject)\r\n                    .then(returnedNote => {\r\n                      setNotes(notes.concat(returnedNote));\r\n                      setNewNote('')\r\n                      })\r\n            ;\r\n            \r\n    }\r\n\r\n    const toggleImportanceOf = id => {\r\n      const note = notes.find(n => n.id === id)\r\n      const changedNote = { ...note, important: !note.important }\r\n    \r\n      noteService\r\n            .update(id, changedNote)\r\n            .then(returnedNote => {\r\n                      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n                  })\r\n            .catch(error => {\r\n              setErrorMessage(\r\n                          `Note '${note.content}' was already removed from server`)\r\n                      setTimeout(() => {\r\n                                  setErrorMessage(null)\r\n                                        }, 5000)\r\n      setNotes(notes.filter(n => n.id !== id))\r\n      })\r\n    }\r\n   \r\n\r\n    const handleNoteChange = (event) => {      \r\n        setNewNote(event.target.value);  \r\n    }\r\n    \r\n    const notesToShow = showAll? notes: notes.filter(note=>note.important===true);\r\n\r\n    return (\r\n      <div>\r\n        <h1>Notes</h1>\r\n        <Notification message={errorMessage} />\r\n        <div>        \r\n            <button onClick={() => setShowAll(!showAll)}>          \r\n                show {showAll ? 'important' : 'all' }        \r\n            </button>      \r\n        </div>\r\n        <ul>\r\n          {notesToShow.map(note => \r\n            <Note key={note.id} note={note}\r\n            toggleImportance={() => toggleImportanceOf(note.id)}\r\n            />\r\n          )}\r\n        </ul>\r\n        <form onSubmit={addNote}>        \r\n            <input \r\n                value={newNote}\r\n                onChange={handleNoteChange} />   \r\n            <button type=\"submit\">save</button>      \r\n        </form>  \r\n            <Footer/>\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default App ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render(  \r\n    <App/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}